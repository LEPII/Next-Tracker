{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/api/users/route.js"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport prisma from \"@prisma/client\";\n\nexport async function POST(NextRequest) {\n  const body = await NextRequest.json();\n\n  if (!body.name || !body.email || !body.password) {\n    return NextResponse.json(\n      { message: \"Please provide all required fields: name, email, password\" },\n      {\n        status: 400,\n      }\n    );\n  }\n\n  try {\n    const newUser = await prisma.user.create({\n      data: { name: body.name, email: body.email, password: body.password },\n    });\n    return NextResponse.json(newUser, { status: 201 });\n  } catch (error) {\n    console.error(\"Error creating user:\", error);\n    return NextResponse.json(\n      { message: \"An error occurred during user creation\" },\n      {\n        status: 500,\n      }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAGO,eAAe,KAAK,WAAW;IACpC,MAAM,OAAO,MAAM,YAAY,IAAI;IAEnC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,QAAQ,EAAE;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA4D,GACvE;YACE,QAAQ;QACV;IAEJ;IAEA,IAAI;QACF,MAAM,UAAU,MAAM,uDAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACvC,MAAM;gBAAE,MAAM,KAAK,IAAI;gBAAE,OAAO,KAAK,KAAK;gBAAE,UAAU,KAAK,QAAQ;YAAC;QACtE;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS;YAAE,QAAQ;QAAI;IAClD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAyC,GACpD;YACE,QAAQ;QACV;IAEJ;AACF"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}