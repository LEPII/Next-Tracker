module.exports = {

"[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-ssr] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
exports._ = exports._interop_require_default = _interop_require_default;
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

}.call(this) }),
"[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-ssr] (ecmascript)": (function({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require }) { !function() {

"use strict";
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
exports._ = exports._interop_require_wildcard = _interop_require_wildcard;
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
            else newObj[key] = obj[key];
        }
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}

}.call(this) }),
"[project]/node_modules/@swc/helpers/esm/_class_private_field_loose_base.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "_": ()=>_class_private_field_loose_base,
    "_class_private_field_loose_base": ()=>_class_private_field_loose_base
});
function _class_private_field_loose_base(receiver, privateKey) {
    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
        throw new TypeError("attempted to use private field on non-instance");
    }
    return receiver;
}
;

})()),
"[project]/node_modules/@swc/helpers/esm/_class_private_field_loose_key.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "_": ()=>_class_private_field_loose_key,
    "_class_private_field_loose_key": ()=>_class_private_field_loose_key
});
var id = 0;
function _class_private_field_loose_key(name) {
    return "__private_" + id++ + "_" + name;
}
;

})()),
"[project]/node_modules/@swc/helpers/esm/_tagged_template_literal_loose.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "_": ()=>_tagged_template_literal_loose,
    "_tagged_template_literal_loose": ()=>_tagged_template_literal_loose
});
function _tagged_template_literal_loose(strings, raw) {
    if (!raw) raw = strings.slice(0);
    strings.raw = raw;
    return strings;
}
;

})()),
"[project]/node_modules/@formbricks/js/dist/loadFormbricks-BzaImH2L.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "l": ()=>loadFormbricksToProxy
});
const wrapThrowsAsync = (fn)=>async (...args)=>{
        try {
            return {
                ok: true,
                data: await fn(...args)
            };
        } catch (error) {
            return {
                ok: false,
                error
            };
        }
    };
class MethodQueue {
    constructor(){
        this.queue = [];
        this.isExecuting = false;
        this.add = (method)=>{
            this.queue.push(method);
            this.run();
        };
        this.runNext = async ()=>{
            if (this.isExecuting) return;
            const method = this.queue.shift();
            if (method) {
                this.isExecuting = true;
                try {
                    await method();
                } finally{
                    this.isExecuting = false;
                    if (this.queue.length > 0) {
                        this.runNext();
                    }
                }
            }
        };
        this.run = async ()=>{
            if (!this.isExecuting && this.queue.length > 0) {
                await this.runNext();
            }
        };
        this.clear = ()=>{
            this.queue = [];
        };
    }
}
let isInitializing = false;
let isInitialized = false;
const methodQueue = new MethodQueue();
const loadFormbricksSDK = async (apiHost, sdkType)=>{
    if (!window.formbricks) {
        const res = await fetch(`${apiHost}/api/packages/${sdkType}`);
        if (!res.ok) {
            return {
                ok: false,
                error: new Error(`Failed to load Formbricks ${sdkType} SDK`)
            };
        }
        const sdkScript = await res.text();
        const scriptTag = document.createElement("script");
        scriptTag.innerHTML = sdkScript;
        document.head.appendChild(scriptTag);
        const getFormbricks = async ()=>new Promise((resolve, reject)=>{
                const checkInterval = setInterval(()=>{
                    if (window.formbricks) {
                        clearInterval(checkInterval);
                        resolve();
                    }
                }, 100);
                setTimeout(()=>{
                    clearInterval(checkInterval);
                    reject(new Error(`Formbricks ${sdkType} SDK loading timed out`));
                }, 1e4);
            });
        try {
            await getFormbricks();
            return {
                ok: true,
                data: void 0
            };
        } catch (error) {
            return {
                ok: false,
                error: new Error(error.message ?? `Failed to load Formbricks ${sdkType} SDK`)
            };
        }
    }
    return {
        ok: true,
        data: void 0
    };
};
const loadFormbricksToProxy = async (prop, sdkType, ...args)=>{
    const executeMethod = async ()=>{
        try {
            return await window.formbricks[prop](...args);
        } catch (error) {
            console.error(`ðŸ§± Formbricks - Global error: ${error}`);
            throw error;
        }
    };
    if (!isInitialized) {
        if (isInitializing) {
            methodQueue.add(executeMethod);
        } else {
            if (prop === "init") {
                isInitializing = true;
                const initialize = async ()=>{
                    const { apiHost } = args[0];
                    const loadSDKResult = await wrapThrowsAsync(loadFormbricksSDK)(apiHost, sdkType);
                    if (!loadSDKResult.ok) {
                        isInitializing = false;
                        console.error(`ðŸ§± Formbricks - Global error: ${loadSDKResult.error.message}`);
                        return;
                    }
                    try {
                        const result = await window.formbricks[prop](...args);
                        isInitialized = true;
                        isInitializing = false;
                        return result;
                    } catch (error) {
                        isInitializing = false;
                        console.error(`ðŸ§± Formbricks - Global error: ${error}`);
                        throw error;
                    }
                };
                methodQueue.add(initialize);
            } else {
                console.error("ðŸ§± Formbricks - Global error: You need to call formbricks.init before calling any other method");
                return;
            }
        }
    } else {
        if (window.formbricks && typeof window.formbricks[prop] !== "function") {
            console.error(`ðŸ§± Formbricks - Global error: Formbricks ${sdkType} SDK does not support method ${String(prop)}`);
            return;
        }
        methodQueue.add(executeMethod);
        return;
    }
};
;
 //# sourceMappingURL=loadFormbricks-BzaImH2L.js.map

})()),
"[project]/node_modules/@formbricks/js/dist/app.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>formbricksApp
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$formbricks$2f$js$2f$dist$2f$loadFormbricks$2d$BzaImH2L$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@formbricks/js/dist/loadFormbricks-BzaImH2L.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const formbricksProxyHandler = {
    get (_target, prop, _receiver) {
        return (...args)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$formbricks$2f$js$2f$dist$2f$loadFormbricks$2d$BzaImH2L$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["l"])(prop, "app", ...args);
    }
};
const formbricksApp = new Proxy({}, formbricksProxyHandler);
;
 //# sourceMappingURL=app.js.map

})()),

};

//# sourceMappingURL=node_modules_277295._.js.map